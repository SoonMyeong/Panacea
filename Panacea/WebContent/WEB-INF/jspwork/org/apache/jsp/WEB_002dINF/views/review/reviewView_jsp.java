/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2018-05-18 11:26:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.review;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.panacea.review.model.vo.*;
import java.util.*;
import com.panacea.patient.model.vo.*;
import com.panacea.doctor.model.vo.*;
import com.panacea.admin.model.vo.*;

public final class reviewView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1526547638000L));
    _jspx_dependants.put("/WEB-INF/views/common/footer.jsp", Long.valueOf(1525785638000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("com.panacea.admin.model.vo");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("com.panacea.review.model.vo");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.panacea.doctor.model.vo");
    _jspx_imports_packages.add("com.panacea.patient.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	Review review = (Review)request.getAttribute("Review");
	ArrayList<ReviewComment> list = (ArrayList<ReviewComment>)request.getAttribute("commentlist");
	ArrayList<ReviewComment> mostLikeCommentList = (ArrayList<ReviewComment>)request.getAttribute("mostLikeCommentList");
	int cPage = (int)request.getAttribute("cPage");

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");

	String selected_menu = (String)request.getAttribute("selectedMenu");
	String selected_submenu = (String)request.getAttribute("selectedSubMenu");

      out.write('\r');
      out.write('\n');

	String loginType = (String)session.getAttribute("loginType");
	System.out.println("sessionLoginType="+loginType);

	Patient loginPatient = null;
	Doctor loginDoctor = null;
	Admin loginAdmin = null;	

	boolean isLogin = false;
	
	if("patient".equals(loginType)){
		loginPatient = (Patient)session.getAttribute("loginPatient");
		/* System.out.println("sessionLoginId="+loginPatient.getPatientId()); */
		isLogin = true;
	} else if("doctor".equals(loginType)){
		loginDoctor = (Doctor)session.getAttribute("loginDoctor");
		/* System.out.println("sessionLoginId="+loginDoctor.getDoctorId()); */
		isLogin = true;
	} else if("admin".equals(loginType)){
		loginAdmin = (Admin)session.getAttribute("loginAdmin");
		/* System.out.println("sessionLoginId="+loginAdmin.getAdminId()); */
		isLogin = true;
	}

	

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>PANACEA</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Do+Hyeon|Didact+Gothic\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/style.css\" />\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/js/jquery-3.3.1.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t$(\".menu\").each(function(){\r\n");
      out.write("\t\t\tif($(this).hasClass(\"");
      out.print(selected_menu);
      out.write("\")){\r\n");
      out.write("\t\t\t\t$(this).find(\"a\").css({\r\n");
      out.write("\t\t\t\t\t\"border-bottom\":\"5px solid #00165e\",\r\n");
      out.write("\t\t\t\t\t\"padding-bottom\": \"10px\",\r\n");
      out.write("\t\t\t\t\t\"color\":\"#00165e\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\".submenu\").each(function(){\r\n");
      out.write("\t\t\tif($(this).hasClass(\"");
      out.print(selected_submenu);
      out.write("\")){\r\n");
      out.write("\t\t\t\t$(this).css({\r\n");
      out.write("\t\t\t\t\t\"background-image\": \"url('../img/subnav_back.png')\",\r\n");
      out.write("\t\t\t    \t\"background-repeat\": \"no-repeat\",\r\n");
      out.write("\t\t\t    \t\"background-position\": \"right\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).find(\"a\").css({\r\n");
      out.write("\t\t\t\t\t\"color\": \"#3954ad\",\r\n");
      out.write("\t\t\t    \t\"text-decoration\": \"underline\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\".stepmenu\").each(function(){\r\n");
      out.write("\t\t\tvar div_id = $(this).attr(\"id\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(div_id == \"step1\" && div_id == \"");
      out.print(selected_submenu);
      out.write("\"){\r\n");
      out.write("\t\t\t\t$(this).css({\r\n");
      out.write("\t\t\t\t\t\"background\":\"#fbfbfb\",\r\n");
      out.write("\t\t\t\t\t\"color\":\"#6480db\",\r\n");
      out.write("\t\t\t\t\t\"border-top\":\"1px solid #6480db\",\r\n");
      out.write("\t\t\t\t\t\"border-left\":\"1px solid #6480db\",\r\n");
      out.write("\t\t\t\t\t\"border-right\":\"1px solid #6480db\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#step2\").css({\r\n");
      out.write("\t\t\t\t\t\"background\": \"#2f4488\",\r\n");
      out.write("\t\t\t\t\t\"color\": \"white\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#step3\").css({\r\n");
      out.write("\t\t\t\t\t\"background\": \"#04185b\",\r\n");
      out.write("\t\t\t\t\t\"color\": \"white\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#reservation-content\").css(\"border-color\", \"#6480db\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(div_id == \"step2\" && div_id == \"");
      out.print(selected_submenu);
      out.write("\"){\r\n");
      out.write("\t\t\t\t$(this).css({\r\n");
      out.write("\t\t\t\t\t\"background\":\"#fbfbfb\",\r\n");
      out.write("\t\t\t\t\t\"color\":\"#2f4488\",\r\n");
      out.write("\t\t\t\t\t\"border-top\":\"1px solid #2f4488\",\r\n");
      out.write("\t\t\t\t\t\"border-left\":\"1px solid #2f4488\",\r\n");
      out.write("\t\t\t\t\t\"border-right\":\"1px solid #2f4488\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#step1\").css({\r\n");
      out.write("\t\t\t\t\t\"background\": \"#6480db\",\r\n");
      out.write("\t\t\t\t\t\"color\": \"white\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#step3\").css({\r\n");
      out.write("\t\t\t\t\t\"background\": \"#04185b\",\r\n");
      out.write("\t\t\t\t\t\"color\": \"white\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#reservation-content\").css(\"border-color\", \"#2f4488\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(div_id == \"step3\" && div_id == \"");
      out.print(selected_submenu);
      out.write("\"){\r\n");
      out.write("\t\t\t\t$(this).css({\r\n");
      out.write("\t\t\t\t\t\"background\":\"#fbfbfb\",\r\n");
      out.write("\t\t\t\t\t\"color\":\"#04185b\",\r\n");
      out.write("\t\t\t\t\t\"border-top\":\"1px solid #04185b\",\r\n");
      out.write("\t\t\t\t\t\"border-left\":\"1px solid #04185b\",\r\n");
      out.write("\t\t\t\t\t\"border-right\":\"1px solid #04185b\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#step1\").css({\r\n");
      out.write("\t\t\t\t\t\"background\": \"#6480db\",\r\n");
      out.write("\t\t\t\t\t\"color\": \"white\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#step2\").css({\r\n");
      out.write("\t\t\t\t\t\"background\": \"#2f4488\",\r\n");
      out.write("\t\t\t\t\t\"color\": \"white\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#reservation-content\").css(\"border-color\", \"#04185b\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("\t\r\n");
      out.write("<body>\r\n");
      out.write("\t<header id = \"header\">\r\n");
      out.write("\t\t<div id=\"title-wrapper\">\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("\">\r\n");
      out.write("\t\t\t\t<img class=\"logo\" src=\"");
      out.print(request.getContextPath() );
      out.write("/img/logo.png\" alt=\"logo_panacea\" />\r\n");
      out.write("\t\t\t\t<h1 id=\"title\">Panacea</h1>\r\n");
      out.write("\t\t\t</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("  \t\t<nav id=\"nav-wrapper\">\r\n");
      out.write("    \t\t<ul class=\"main-nav\">\r\n");
      out.write("\t        \t<li class=\"menu info\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/info/infoView\">병원소개</a></li>\r\n");
      out.write("\t        \t<li class=\"menu reservation\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/reservation/step1Reservation\">진료예약</a></li>\r\n");
      out.write("\t        \t<li class=\"menu notice\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/notice/noticeList\">공지사항</a></li>\r\n");
      out.write("\t        \t<li class=\"menu review\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/review/reviewList\">진료후기</a></li>\r\n");
      out.write("\t        \t");
if(!isLogin){ 
      out.write("\r\n");
      out.write("\t\t        \t<li class=\"menu login\" id=\"partition\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/common/login\">로그인</a></li>\r\n");
      out.write("\t\t        \t<li class=\"menu join\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/patient/join\">회원가입</a></li>\r\n");
      out.write("\t\t        ");
} else { 
      out.write("\r\n");
      out.write("\t\t        \t<li id=\"partition\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/common/logout\">로그아웃</a></li>\r\n");
      out.write("\t\t        \t\r\n");
      out.write("\t\t        \t");
 if("patient".equals(loginType) && loginPatient !=null){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<li class=\"menu mypage\">\t\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write('/');
      out.print(loginType );
      out.write('/');
      out.print(loginType );
      out.write("Mypage?userId=");
      out.print(loginPatient.getPatientId() );
      out.write("\">마이페이지</a>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t");
} else if("doctor".equals(loginType) && loginDoctor !=null){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<li class=\"menu mypage\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write('/');
      out.print(loginType );
      out.write('/');
      out.print(loginType );
      out.write("Mypage?userId=");
      out.print(loginDoctor.getDoctorId() );
      out.write("\">마이페이지</a>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t");
}else if("admin".equals(loginType) && loginAdmin !=null){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<li class=\"menu mypage\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write('/');
      out.print(loginType );
      out.write("/patientList\">마이페이지</a>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("    \t\t</ul>\r\n");
      out.write("    \t\t<hr>\r\n");
      out.write("  \t\t</nav>\r\n");
      out.write("\t</header>\r\n");
      out.write("\t\r\n");
      out.write("\t<section id=\"content-section\">");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"subnav-wrapper\">\r\n");
      out.write("   <span id=\"subnav-title\"></span>\r\n");
      out.write("   <div id=\"sub_menu\">\r\n");
      out.write("       <p><a href=\"");
      out.print(request.getContextPath());
      out.write("/review/reviewList\">게시판으로 돌아가기</a></p>\r\n");
      out.write("\t\t");
 if(loginPatient != null && loginPatient.getPatientId().equals(review.getPatientId())){ 
      out.write("\r\n");
      out.write("\t\t<p><a href=\"");
      out.print(request.getContextPath());
      out.write("/review/reviewUpdate?no=");
      out.print(review.getReviewNo());
      out.write("\">수정하기</a></p>\r\n");
      out.write("\t\t<p><a href=\"");
      out.print(request.getContextPath());
      out.write("/review/reviewDelete?no=");
      out.print(review.getReviewNo());
      out.write("\" class = \"btn-delete\">삭제하기</a></p>\r\n");
      out.write("\t\t");
} else if(loginAdmin != null){
      out.write("\r\n");
      out.write("\t\t<p><a href=\"");
      out.print(request.getContextPath());
      out.write("/review/reviewUpdate?no=");
      out.print(review.getReviewNo());
      out.write("\">수정하기</a></p>\r\n");
      out.write("\t\t<p><a href=\"");
      out.print(request.getContextPath());
      out.write("/review/reviewDelete?no=");
      out.print(review.getReviewNo());
      out.write("\" class = \"btn-delete\">삭제하기</a></p>\r\n");
      out.write("\t\t");
} else if(loginPatient == null && loginAdmin == null && loginDoctor == null){
      out.write("\r\n");
      out.write("\t\t<p><a href=\"");
      out.print(request.getContextPath());
      out.write("/common/login\" id = \"login\">로그인</a></p>\t\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("   </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"content-wrapper\">\r\n");
      out.write("\t<div id=\"review-container\">\r\n");
      out.write("\t\t<h2>후기 상세보기</h2>\r\n");
      out.write("\t\t<table id=\"tbl-review-one\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>제목</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(review.getReviewTitle() );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>작성자</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(review.getPatientId() );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>평점</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"grade\" value=\"");
      out.print(review.getGrade());
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t");
for(int i=0; i < review.getGrade(); i++){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<img src=\"");
      out.print(request.getContextPath() );
      out.write("/img/review/fillstar.png\" alt=\"\" class = \"star\"/>\r\n");
      out.write("\t\t\t\t\t");
} for(int i=review.getGrade()+1; i<6; i++){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t    <img src=\"");
      out.print(request.getContextPath() );
      out.write("/img/review/emptystar.png\" alt=\"\" class = \"star\"/>\r\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>작성일</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(review.getReviewDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>내용</td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t");
      out.print(review.getReviewContent() );
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- ******** 작성자 Admin or Patient 에따라 분기  ***********  -->\r\n");
      out.write(" \t");
 String reviewCommentWriter = "";
 	if(loginPatient != null && loginDoctor == null){ 
		 reviewCommentWriter = loginPatient.getPatientId(); 
	}else if(loginAdmin != null && loginDoctor == null){
	 	 reviewCommentWriter =  loginAdmin.getAdminId();
	}else{} 
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"comment-contariner\">\r\n");
      out.write("\t<p id=\"comment-title\">댓글쓰기</p>\r\n");
      out.write("\t<div class=\"comment-editer\">\r\n");
      out.write("\t\t<form name=\"reviewCommentFrm\"  action=\"");
      out.print(request.getContextPath());
      out.write("/review/reviewCommentInsert\" method = \"post\">\r\n");
      out.write("\t\t\t<textarea name=\"reviewCommentContent\" cols=\"60\" rows=\"3\"></textarea>\r\n");
      out.write("\t\t\t<button type=\"submit\" id=\"btn-insert\">OK</button>\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"reviewCommentWriter\" value=\"");
      out.print(reviewCommentWriter );
      out.write("  \" />\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"reviewRef\" value=\"");
      out.print(review.getReviewNo());
      out.write("\" />\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"reviewCommentRef\" value=\"0\" /> \r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"reviewCommentLevel\" value = \"1\" />\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"cPage\" value = \"");
      out.print(cPage );
      out.write("\" />\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</form>\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
if(mostLikeCommentList != null){ 
      out.write("\r\n");
      out.write("\t<table id=\"tbl-mostLikeComment\"> \r\n");
      out.write("\t<p id=\"comment-title\">Most Like Comment</p>\r\n");
      out.write("\t");
for(ReviewComment rc : mostLikeCommentList){  
		   if(rc.getCommentLevel() == 1){ 
      out.write("\t \t\r\n");
      out.write("\t\t\t<!--level1  -->\t\r\n");
      out.write("\t\t\t\t<tr class=\"level1\">\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<sub class = \"comment-writer\">");
      out.print(rc.getCommentWriter() );
      out.write("</sub>\r\n");
      out.write("\t\t\t\t\t\t<sub class=\"comment-date\">");
      out.print(rc.getCommentDate() );
      out.write("</sub>\r\n");
      out.write("\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t");
      out.print( rc.getCommentContent() );
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td><button class = \"btn-likeIt\" value = \"");
      out.print(rc.getCommentNo());
      out.write("\">LikeIt</button>");
      out.print(rc.getLikeIt());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td><button class = \"btn-Bad\" value = \"");
      out.print(rc.getCommentNo());
      out.write("\">Bad</button>");
      out.print(rc.getBad());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td colspan = \"3\">\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn-reply\" value = \"");
      out.print(rc.getCommentNo() );
      out.write("\">답글</button>\r\n");
      out.write("\t\t\t\t\t\t<!--삭제버튼 추가  -->\r\n");
      out.write("\t\t\t\t\t\t");
if(loginPatient != null && loginPatient.getPatientId().equals(rc.getCommentWriter().trim())){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn-delete\" value = \"");
      out.print(rc.getCommentNo());
      out.write("\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" class=\"delLevel\" value = \"");
      out.print(rc.getCommentLevel() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t");
}else if(loginAdmin != null ){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn-delete\" value = \"");
      out.print(rc.getCommentNo());
      out.write("\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" class=\"delLevel\" value = \"");
      out.print(rc.getCommentLevel() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t");
}else{} 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t");
 }
		}  /* end of for */ 
	}else if(mostLikeCommentList.size() == 0){ 
      out.write("\r\n");
      out.write("   \t<tr>\r\n");
      out.write("   \t<td colspan = \"4\">댓글이 없습니다</td>\r\n");
      out.write("   \t</tr>\r\n");
      out.write("   ");
 }
      out.write(" <!--end of nullIf  -->\r\n");
      out.write("   </table>\r\n");
      out.write("\t<br />\r\n");
      out.write("\t\r\n");
      out.write("\t<!--댓글 목록 테이블 -->\r\n");
      out.write("\t");
if(list != null){ 
      out.write("\r\n");
      out.write("\t<table id=\"tbl-comment\">\r\n");
      out.write("\t<p id=\"comment-title\">Comment</p>\r\n");
      out.write("\t");
for(ReviewComment rc : list){  
		   if(rc.getCommentLevel()==1){ 
      out.write("\r\n");
      out.write("\t\t   \t<!--level1  -->\t\r\n");
      out.write("\t\t\t\t<tr class=\"level1\">\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<sub class = \"comment-writer\">");
      out.print(rc.getCommentWriter() );
      out.write("</sub>\r\n");
      out.write("\t\t\t\t\t\t<sub class=\"comment-date\">");
      out.print(rc.getCommentDate() );
      out.write("</sub>\r\n");
      out.write("\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t");
      out.print( rc.getCommentContent() );
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td><button class = \"btn-likeIt\" value = \"");
      out.print(rc.getCommentNo());
      out.write("\">LikeIt</button>");
      out.print(rc.getLikeIt());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td><button class = \"btn-Bad\" value = \"");
      out.print(rc.getCommentNo());
      out.write("\">Bad</button>");
      out.print(rc.getBad());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td colspan = \"3\">\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn-reply\" value = \"");
      out.print(rc.getCommentNo() );
      out.write("\">답글</button>\r\n");
      out.write("\t\t\t\t\t\t<!--삭제버튼 추가  -->\r\n");
      out.write("\t\t\t\t\t\t");
if((loginPatient != null) && (rc.getCommentWriter().trim().equals(loginPatient.getPatientId()))){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn-delete\" value = \"");
      out.print(rc.getCommentNo());
      out.write("\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" class=\"delLevel\" value = \"");
      out.print(rc.getCommentLevel() );
      out.write("\"  />\r\n");
      out.write("\t\t\t\t\t\t");
}else if(loginAdmin != null ){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn-delete\" value = \"");
      out.print(rc.getCommentNo());
      out.write("\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" class=\"delLevel\" value = \"");
      out.print(rc.getCommentLevel() );
      out.write("\"  />\r\n");
      out.write("\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t");
 } else { 
      out.write("\r\n");
      out.write("\t\t\t<!--level2  -->\r\n");
      out.write("\t\t\t\t<tr class=\"level2\">\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<sub class = \"comment-writer\">");
      out.print(rc.getCommentWriter() );
      out.write("</sub>\r\n");
      out.write("\t\t\t\t\t\t<sub class=\"comment-date\">");
      out.print(rc.getCommentDate() );
      out.write("</sub>\r\n");
      out.write("\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t");
      out.print( rc.getCommentContent() );
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td colspan = \"3\">\r\n");
      out.write("\t\t\t\t\t\t<!--삭제버튼 추가  -->\r\n");
      out.write("\t\t\t\t\t\t");
if(loginPatient != null && loginPatient.getPatientId().equals(rc.getCommentWriter())){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn-delete\" value = \"");
      out.print(rc.getCommentNo());
      out.write("\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" class=\"delLevel\" value = \"");
      out.print(rc.getCommentLevel() );
      out.write("\"  />\r\n");
      out.write("\t\t\t\t\t\t\t");
 System.out.println("commentLevel = "+ rc.getCommentLevel()); 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
}else if(loginAdmin != null ){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn-delete\" value = \"");
      out.print(rc.getCommentNo());
      out.write("\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" class=\"delLevel\" value = \"");
      out.print(rc.getCommentLevel() );
      out.write("\"  />\r\n");
      out.write("\t\t\t\t\t\t");
}else{} 
      out.write("\r\n");
      out.write("\t\t\t\t   </td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
} //end of If
	} //end of for 
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");
 }
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"pagination\">\r\n");
      out.write("\t\t\t");
      out.print(request.getAttribute("pageBar") );
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("   \r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/************ 답글 작성 삭제 관련 스크립트 **************/\r\n");
      out.write("/* 로그인 여부 체크 */\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$(\"[name=reviewCommentContent]\").focus(function(){\r\n");
      out.write("\t\tif(");
      out.print( loginPatient==null && loginAdmin == null);
      out.write(")\r\n");
      out.write("\t\t\tfn_loginAlert();\r\n");
      out.write("\t});\r\n");
      out.write("\t//boardCommentFrm폼 유효성검사\r\n");
      out.write("\t$(\"[name=reviewCommentFrm]\").submit(function(e){\r\n");
      out.write("\t\tif(");
      out.print( loginPatient==null && loginAdmin == null);
      out.write("){\r\n");
      out.write("\t\t\tfn_loginAlert();\r\n");
      out.write("\t\t\te.preventDefault();  //로그인안했을시 이벤트 발생 막음\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar len = $(\"[name=reviewCommentContent]\").val().trim().length;\r\n");
      out.write("\t\tif(len==0){\r\n");
      out.write("\t\t\talert(\"댓글을 입력하세요\");\r\n");
      out.write("\t\t\te.preventDefault(); //내용안적으면 이벤트 발생 막음\r\n");
      out.write("\t\t\t$(\"[name=reviewCommentContent]\").focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t//답글버튼 클릭시 이벤트 처리\r\n");
      out.write("\t$(\".btn-reply\").on('click',function(){\r\n");
      out.write("\t\t");
 if(loginPatient != null || loginAdmin != null){
      out.write("\r\n");
      out.write("\t\t//로그인한 경우\r\n");
      out.write("\t\tvar tr = $(\"<tr></tr>\");\r\n");
      out.write("\t\tvar html = '<td style=\"display:none; text-align : left;\" colspan=\"4\">';\r\n");
      out.write("\t\thtml += '<form action=\"");
      out.print(request.getContextPath());
      out.write("/review/reviewCommentInsert\" method = \"post\">';\r\n");
      out.write("\t\thtml += '<textarea name=\"reviewCommentContent\" cols=\"60\" rows=\"3\"></textarea>';\r\n");
      out.write("\t\thtml += '<button type=\"submit\" id=\"btn-insert\">OK</button>';\r\n");
      out.write("\t\thtml += '<input type=\"hidden\" name=\"reviewCommentWriter\" value=\"");
      out.print(reviewCommentWriter);
      out.write("\" />';\r\n");
      out.write("\t\thtml += '<input type=\"hidden\" name=\"reviewRef\" value=\"");
      out.print(review.getReviewNo());
      out.write("\" />';\r\n");
      out.write("\t\thtml += '<input type=\"hidden\" name=\"reviewCommentRef\" value=\"'+$(this).val()+'\" />';\r\n");
      out.write("\t\thtml += '<input type=\"hidden\" name=\"reviewCommentLevel\" value = \"2\" />'\r\n");
      out.write("\t\thtml += '<input type=\"hidden\" name=\"cPage\" value = \"");
      out.print(cPage);
      out.write("\" />'\r\n");
      out.write("\t\thtml += '</form></td>';\r\n");
      out.write("\t\ttr.html(html);\r\n");
      out.write("\t\t//생성된 노드를 페이지에 추가\r\n");
      out.write("\t\ttr.insertAfter($(this).parent().parent()).children(\"td\").slideDown(800);\r\n");
      out.write("\t\t//한번클릭후에는 이벤트핸들러\r\n");
      out.write("\t\t$(this).off(\"click\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//이벤트핸들러 추가\r\n");
      out.write("\t\ttr.find(\"form\").submit(function(e){\r\n");
      out.write("\t\t\tif(");
      out.print( loginPatient==null && loginAdmin == null);
      out.write("){\r\n");
      out.write("\t\t\t\tfn_loginAlert();\r\n");
      out.write("\t\t\t\te.preventDefault();  //로그인안했을시 이벤트 발생 막음\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar len = $(this).children(\"textarea\").val().trim().length;\r\n");
      out.write("\t\t\tif(len==0){\r\n");
      out.write("\t\t\t\talert(\"댓글을 입력하세요\");\r\n");
      out.write("\t\t\t\te.preventDefault(); //내용안적으면 이벤트 발생 막음\r\n");
      out.write("\t\t\t\t$(\"[name=reviewCommentContent]\").focus();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t//포커스\r\n");
      out.write("\t\ttr.find(\"textarea\").focus();\r\n");
      out.write("\r\n");
      out.write("\t\t");
 } else { 
      out.write("\r\n");
      out.write("\t\t//로그인 안한 경우\r\n");
      out.write("\t\tfn_loginAlert();\r\n");
      out.write("\t\t");
}
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t//삭제버튼 클릭시 \r\n");
      out.write("\t$(\".btn-delete\").on(\"click\",function(){\r\n");
      out.write("\t\tvar delLevel = $(this).next().val().trim();\r\n");
      out.write("\t\tconsole.log(delLevel);\r\n");
      out.write("\t\tif(!confirm(\"정말 삭제하시겠습니까?\"))return false;\r\n");
      out.write("\t\t//삭제처리후 돌아올 현재 게시판 번호도 전송함\r\n");
      out.write("\t   if(delLevel == 1){\r\n");
      out.write("\t    location.href = \"");
      out.print(request.getContextPath());
      out.write("/review/reviewCommentDelete?commentNo=\"+$(this).val()+\"&reviewNo=\"+");
      out.print(review.getReviewNo());
      out.write("+\"&cPage=\"+");
      out.print(cPage);
      out.write(";\r\n");
      out.write("\t   }else{\r\n");
      out.write("\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/review/reviewRefCommentDelete?commentNo=\"+$(this).val()+\"&reviewNo=\"+");
      out.print(review.getReviewNo());
      out.write("+\"&cPage=\"+");
      out.print(cPage);
      out.write(";   \r\n");
      out.write("\t   }\r\n");
      out.write("      \r\n");
      out.write("   })\r\n");
      out.write("   //LikeIt 버튼 클릭시\r\n");
      out.write("   $(\".btn-likeIt\").on(\"click\",function(){\r\n");
      out.write("\t   ");
if(loginPatient == null && loginAdmin == null && loginDoctor == null ){
      out.write("\r\n");
      out.write("\t   alert(\"로그인 후 이용하실수 있습니다.\");\r\n");
      out.write("\t   return false;\r\n");
      out.write("\t   ");
}else{
      out.write("\r\n");
      out.write("\t   location.href=\"");
      out.print(request.getContextPath());
      out.write("/review/likeit?commentNo=\"+$(this).val()+\"&reviewNo=\"+");
      out.print(review.getReviewNo());
      out.write("+\"&cPage=\"+");
      out.print(cPage);
      out.write("; \r\n");
      out.write("\t   ");
}
      out.write("\r\n");
      out.write("   })\r\n");
      out.write("   //Bad버튼 클릭시\r\n");
      out.write("   $(\".btn-Bad\").on(\"click\",function(){\r\n");
      out.write("\t   ");
if(loginPatient == null && loginAdmin == null && loginDoctor == null ){
      out.write("\r\n");
      out.write("\t   alert(\"로그인 후 이용하실수 있습니다.\");\r\n");
      out.write("\t   return false;\r\n");
      out.write("\t   ");
}else{
      out.write("\r\n");
      out.write("\t   location.href=\"");
      out.print(request.getContextPath());
      out.write("/review/Bad?commentNo=\"+$(this).val()+\"&reviewNo=\"+");
      out.print(review.getReviewNo());
      out.write("+\"&cPage=\"+");
      out.print(cPage);
      out.write(";\r\n");
      out.write("  \t   ");
}
      out.write("\r\n");
      out.write("    })\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("function fn_loginAlert(){\r\n");
      out.write("\talert(\"로그인후 이용하실 수 있습니다\");\r\n");
      out.write("\t$(\"[name = reviewCommentContent]\").blur();\r\n");
      out.write("\treturn false;\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t</section>\r\n");
      out.write("\t\r\n");
      out.write("\t<footer id = \"footer\">\r\n");
      out.write("\t\t<img class=\"footer-logo\" src=\"");
      out.print(request.getContextPath() );
      out.write("/img/logo.png\" alt=\"logo_panacea\">\r\n");
      out.write("\t\t<h3 id=\"footer-title\">Panacea</h3>\r\n");
      out.write("\t    &nbsp;&nbsp;\r\n");
      out.write("\t    <p id = \"footer-content\">\r\n");
      out.write("\t    \t강남구 역삼동 파나시아병원 <br />\r\n");
      out.write("\t    \t ⓒPanacia Corp.\r\n");
      out.write("\t    </p>\r\n");
      out.write("\t           \r\n");
      out.write("\t</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
